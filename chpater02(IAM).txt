IAM은 Identity and Access Management의 약자

IAM에서는 사용자를 생성하고
그룹에 배치하기 때문에 글로벌 서비스에 해당됩니다

여러 인원이 있을경우에,
각 사용자를 그룹으로 묶을수 있다.
각 사용자는 여러 그룹에 속해있을수 있다.

각 사용자는 IAM 정책(권한)을 부여 한다. JSON형태

AWS에는 최소 권한을 주는 것을 원칙으로 한다.


IAM은 글로벌 서비스로 리전 선택이 필요하지 않다.
IAM에서 사용자를 생성하면 어디에서나 사용할 수 있습니다

IAM 정책 관련
  

IAM Password Policy
예를 들어
대소문자, 숫자 물음표와 같은 특수 문자 등을 요구
일정 기간이 지나면 비밀번호를 만료 새 비밀번호 요구(90일 마다 비번 변경)
비번 재사용을 막아 비번 변경시 동일한 비번일 경우 이전에 사용했던 비번을 사용하지 못하게 함

다요소 인증MFA

사용자들은 계정에 접근 권한이 있고

많은 작업을 할 수 있는데요

특히 관리자일 경우에는

구성을 변경하거나 리소스를 삭제하는 등의 작업을 할 수 있죠

따라서 적어도 루트 계정은 무슨 일이 있어도 반드시 보호해야 하며

전체 IAM 사용자들도 보호를 해야 합니다

MFA는 여러분이 알고 있는 비밀번호와

여러분이 가지고 있는 보안 장치를 함께 사용하는 것입니다

그냥 비밀번호보다는 이 둘을 함께 사용하는 게 훨씬 더 안전하죠

AWS에서의 MFA 장치 옵션으로는 어떤 것들이 있을까요?
Google Authenticator를 사용할 수 있는데

하나의 휴대전화에서만 사용이 가능하죠

Authy는 여러 장치에서 사용이 가능합니다

장치의 개수가 다를 뿐 작동 방식은 동일합니다

개인적으로 저는 Authy를 사용하는데 컴퓨터와

휴대전화에서 같이 사용할 수 있기 때문이죠

Authy는 하나의 장치에서도 토큰을 여러 개 지원합니다

즉, 가상 MFA 장치를 사용하면

루트 계정, IAM 사용자 또 다른 계정, 그리고

또 다른 IAM 사용자가 지원되는 식으로

가상 MFA 장치에

원하는 수만큼의 계정 및 사용자 등록이 가능합니다

범용 두 번째 인자, 혹은 U2F 보안 키라고 불리는 것도 있습니다

이는 물리적 장치로 예를 들어

Yubico 사의 YubiKey가 있죠 Yubico는 AWS의 제3자 회사로

AWS 제공 장치가 아니라 제3자 회사의 장치입니다

이렇게 물리적 장치를 사용하면 전자 열쇠에 달고 다닐 수 있으니

사용이 상당히 편리할 수 있겠죠

YubiKey는 하나의 보안 키에서 여러 루트 계정과 IAM 사용자를

지원하기 때문에 하나의 키로도 충분합니다


어떻게 AWS에 엑세스 가능한가?
AWS Management COnsole

AWS Command Line Interface

AWS Software Developer Kit(SDK)

엑세스키는 어떻게 생성
사용자들이 직접 자신의 엑세스키를 직접 관리한다.
사용자 측면에서 엑세스키는 비밀번호와 마찬가지로 암호와 같다.

엑세스키의 ID는 사용자 이름이라고 생각
엑세스키는 비밀번호


AWS CLI Window설치



IAM Role

Ec2인스턴스를 만들어서 AWS에 어떤 작업을 수행할떄 해당 EC2 인스턴스에 권한을 부여 해야한다.

IAM Role <-> Ec2인스턴스

AWS 서비스에 롤을 생성 할수 있다.


IAM의 일반적인 가이드라인과 모범 사례를 알려드립니다

여러분이 AWS를 사용할 때 실수하지 않기 바라기 때문이죠

루트 계정은 AWS 계정을 설정할 때를 제외하고 사용하지 마세요

여러분은 이미 두 개의 계정을 갖고 있을 것입니다

루트 계정과 여러분의 개인 계정이죠

하나의 AWS 사용자는 한 명의 실제 사용자를 의미합니다

따라서 친구가 여러분의 AWS를 이용하고 싶다면

여러분의 자격 증명을 주지 말고 새로운 사용자를 만들어 주세요

사용자를 그룹에 넣어 해당 그룹에 권한을 부여할 수 있어요

따라서 그룹 수준에서 보안을 관리할 수 있습니다

또한 비밀번호 정책을 강력하게 만들어야 합니다

만약 다요소 인증(MFA)을

사용할 수 있다면

해커들로부터 계정을 지킬 수 있을 것입니다

또한 AWS 서비스에 권한을 부여할 때마다

역할을 만들고 사용해야 합니다

가상 서버인 EC2 인스턴스를 포함해서요

AWS를 프로그래밍할 경우,

즉, CLI나 SDK를 사용할 경우

반드시 액세스 키를 만들어야 합니다 액세스 키는 비밀번호와 같습니다

기밀이고 여러분만 알고 있어야 합니다

마지막으로 계정의 권한을 감사할 때는

IAM 자격 증명 보고서와 IAM 액세스 분석기를 사용할 수 있어요

마지막으로 절대로 IAM 사용자와 액세스 키를 공유하지 마세요

IAM 사용자는 여러분 회사 내의 실제 물리적 사용자와 매핑되어야 하며

이 사용자는 AWS 콘솔 비밀번호를 갖게 됩니다

사용자를 그룹화할 수 있어요, 따라서 그룹에는 사용자만 있죠

사용자 또는 그룹에 대한 권한을 설명하는 정책 또는 JSON 문서를 첨부할 수 있으며

역할도 만들 수 있어요

역할은 ID가 될 거지만, 이번에는 EC2 인스턴스나 기타 AWS 서비스에 대한 것이 될 거에요

또한 보안을 위해 멀티팩터 인증 즉 MFA를 활성화할 수 있다는 것을 알아봤어요

사용자에 대한 비밀번호 정책도 설정할 수 있었죠

커맨드라인으로 CLI를 사용하여 서비스를 관리하거나, SDK를 사용하여

프로그래밍 언어로 AWS 서비스를 관리할 수 있어요

마지막으로 CLI 또는 SDK를 사용하여 액세스할 수 있는 액세스 키를 생성할 수 있어요

마지막으로 IAM 사용량을 감사할 수 있어요, IAM 자격 증명 보고서를 생성하고

IAM 액세스 어드바이저 서비스를 사용해서요